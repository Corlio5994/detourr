[{"path":"https://casperhart.github.io/detourr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 detourr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Adding a new display method and widget to {detourr}","text":"set project development, ’ll need install node.js yarn. cloning repository, open terminal install node.js dependencies : bundle typescript code install {detourr} using:","code":"yarn install yarn run build"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"creating-a-widget","dir":"Articles","previous_headings":"","what":"Creating a widget","title":"Adding a new display method and widget to {detourr}","text":"get started, ’ll first create new file srcts/hello_world/index.ts following contents: , HelloWorld widget created ’s class two public methods: renderValue resize. renderValue method takes argument inputData, contain data passed R widget including configuration need, data set, sequence projection matrices representing tour path. moment, logging data browser console. allow us explore ’s structure ’s running.","code":"export class HelloWorld {   private containerElement: HTMLDivElement;   private message: HTMLHeadElement;    constructor(el: HTMLDivElement, width: number, height: number) {     var h = document.createElement(\"h1\");     var t = document.createTextNode(\"Hello, world!\");     h.appendChild(t);     this.message = h;     this.resize(width, height);   }    public renderValue(inputData: any) {     document.body.appendChild(this.message);     console.log(inputData);   }    public resize(width: number, height: number) {     console.log(\"Width: \", width, \", Height: \", height);   } }"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"bundling-the-widget","dir":"Articles","previous_headings":"","what":"Bundling the widget","title":"Adding a new display method and widget to {detourr}","text":"HTMLWidgets package can’t deal typescript code -, need modify webpack configuration gets transpiled javascript bundled package built. requires small modification webpack/package.config.ts include TS code additional entrypoint: webpack/package.config.ts: Now, build install package using yarn run build, file hello_world.bundle.js created inst/htmlwidgets/lib folder alongside existing bundles.","code":"const path = require(\"path\"); const webpack = require(\"webpack\");  module.exports = {   mode: \"production\",   entry: {     \"display_scatter_2d\": \"./srcts/display_scatter_2d/index.ts\",     \"display_scatter_3d\": \"./srcts/display_scatter_3d/index.ts\", +   \"hello_world\": \"./srcts/hello_world/index.ts\",   },   ..."},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"adding-the-configuration-and-javascript-bindings","dir":"Articles","previous_headings":"","what":"Adding the configuration and javascript bindings","title":"Adding a new display method and widget to {detourr}","text":"steps section similar general example htmlwidgets documentation, gloss many technical details . short, require two files widget work: inst/htmlwidgets/hello_world.yaml contains configuration, inst/htmlwidgets/hello_world.js contains javascript bindings. First ’ll set configuration file inst/htmlwidgets/hello_world.yaml: Notice inclusion runtime.bundle.js. contains webpack runtime, code won’t run without . external packages widget loads bundled separately well, need include file main bundle. javascript binding, need create file inst/htmlwidgets/hello_world.js. implemented widget typescript class renderValue resize methods, contents javascript binding can remain quite simple even widget becomes complex: inst/htmlwidgets/hello_world.js:","code":"dependencies:   - name: hello_world      src: htmlwidgets/lib/     version: 0.0.9     script:       # these are specified in the order they should load       - runtime.bundle.js       - hello_world.bundle.js HTMLWidgets.widget({      name: \"hello_world\",     type: \"output\",      factory: function (el, width, height) {         let widget = new hello_world.HelloWorld(el, width, height);         return {             renderValue: function (x) {                 widget.renderValue(x);             },             resize: function (width, height) {                 widget.resize(width, height)             },             s: widget         }     } })"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"adding-the-display-method-in-r","dir":"Articles","previous_headings":"","what":"Adding the display method in R","title":"Adding a new display method and widget to {detourr}","text":"diverge htmlwidgets documentation little bit. Rather creating R binding directly, instead create new display method called display_hello_world, let animate_tour function handle rest. R/display_hello_world.R: return value display_hello_world list containing init function called within animate_tour order get widget-specific configuration. input function consists : data: input data use data frame. contain numeric columns use tour, well additional columns may used aesthetic mappings. col_spec: quosure specifying numeric columns use tour. evaluated using {tidyselect} tour_dim: output dimension tour. E.g. 2, 3 init function expected return list following elements: plot: configuation plot. Usually list. widget: name htmlwidget use character value. must consistent specified inst/htmlwidgets/hello_world.yaml. mapping: aesthetic mappings plot, usually format list(\"aesthetic_name\": values) values returned function passed hello_world widget’s renderValue method, along additional fields animate_tour function dataset projection matrices.","code":"#' Display Hello World Example #' #' Note that these comments will be converted in to documentation by the #' {roxygen2} package when we run `yarn run build`. As such, the `@export` #' below is necessary, or else this function won't be made available to the #' user #' #' @export display_hello_world <- function() {   init <- function(data, col_spec, tour_dim) {     data_cols <- tidyselect::eval_select(col_spec, data)     labels <- names(data_cols)      list(       \"plot\" = list(         labels = labels       ),       \"widget\" = \"hello_world\",       \"mapping\" = list()     )   }   list(     \"init\" = init   ) }"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"trying-it-out","dir":"Articles","previous_headings":"","what":"Trying it out","title":"Adding a new display method and widget to {detourr}","text":"Now hard part done, need bundle everything together install package: test widget R:  Success! open browser console, can see full structure data set passed widget. can add additional configuation aesthetic mappings need modifying display_hello_world function:","code":"yarn run build library(detourr) animate_tour(tourr::flea, grand_tour(2), display_hello_world())"},{"path":"https://casperhart.github.io/detourr/articles/adding_a_new_widget.html","id":"useful-resources","dir":"Articles","previous_headings":"","what":"Useful resources","title":"Adding a new display method and widget to {detourr}","text":"Three.js Webpack TypeScript HTMLWidgets","code":""},{"path":"https://casperhart.github.io/detourr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Casper Hart. Author, maintainer. Earo Wang. Author, thesis advisor.","code":""},{"path":"https://casperhart.github.io/detourr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hart C, Wang E (2022). detourr: Animations tourr using htmlwidgets. R package version 0.0.9, https://casperhart.github.io/detourr/.","code":"@Manual{,   title = {detourr: Animations for {tourr} using htmlwidgets},   author = {Casper Hart and Earo Wang},   year = {2022},   note = {R package version 0.0.9},   url = {https://casperhart.github.io/detourr/}, }"},{"path":"https://casperhart.github.io/detourr/index.html","id":"detourr","dir":"","previous_headings":"","what":"Animations for {tourr} using htmlwidgets","title":"Animations for {tourr} using htmlwidgets","text":"Animations {tourr} using htmlwidgets performance portability.","code":""},{"path":"https://casperhart.github.io/detourr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Animations for {tourr} using htmlwidgets","text":"Install package running following R:","code":"remotes::install_github(\"casperhart/detourr\")"},{"path":"https://casperhart.github.io/detourr/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Animations for {tourr} using htmlwidgets","text":"","code":"# 2D scatter library(tourr) library(detourr) animate_tour(    olive,    display = display_scatter(tour_aes(colour = region)), ) # 3D scatter animate_tour(    flea,    grand_tour(3),    display_scatter(tour_aes(colour = species)) )"},{"path":[]},{"path":"https://casperhart.github.io/detourr/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Animations for {tourr} using htmlwidgets","text":"project uses TypeScript code needs compiled bundled package work. , need node.js, yarn installed. cloning repository, can install node.js dependencies via: Compile bundle TypeScript code install R package source running: TypeScript code powers HTMLWidgets can also run standalone app using webpack-dev-server follows: start webpack dev server, automatically recompile reload TypeScript code changes made. sample data HTML used dev server can found ./dev, loaded memory based configuration webpack/dev.config.ts wish make changes HTML files dev/, debug yarn run start-dev command, can instead run yarn run build-dev. load files dev/ folder called dev_build/ rather memory, can make debugging easier.","code":"yarn install yarn run build yarn run start-dev"},{"path":"https://casperhart.github.io/detourr/reference/animate_tour.html","id":null,"dir":"Reference","previous_headings":"","what":"Animate a tour path. — animate_tour","title":"Animate a tour path. — animate_tour","text":"function powers tour animations.  want write tour animation method, best place start looking code animation methods already implemented package.","code":""},{"path":"https://casperhart.github.io/detourr/reference/animate_tour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animate a tour path. — animate_tour","text":"","code":"animate_tour(   data,   tour_path = tourr::grand_tour(d = 2),   display = display_scatter(),   cols = where(is.numeric),   ...,   rescale = TRUE,   sphere = FALSE )"},{"path":"https://casperhart.github.io/detourr/reference/animate_tour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Animate a tour path. — animate_tour","text":"data data frame containing columns use tour. tour_path tour path generator, defaults 2d grand tour display takes display suppose used, defaults (2D) scatter display cols column selection tour. Specified columns must numeric. Uses tidyselect syntax, defaults numeric columns. ... used pass additional arguments start, aps, fps, max_bases tourr, well width height HTMLWidgets rescale true, rescale variables range [0,1]? sphere true, sphere variables","code":""},{"path":"https://casperhart.github.io/detourr/reference/animate_tour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animate a tour path. — animate_tour","text":"","code":"animate_tour(tourr::flea, tourr::grand_tour(3), display_scatter()) #> Error in validate_pch(pch): could not find function \"validate_pch\""},{"path":"https://casperhart.github.io/detourr/reference/detourr-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for detourr — detourr-shiny","title":"Shiny bindings for detourr — detourr-shiny","text":"Output render functions using detourr shiny. output function used must match display method tour dim used, lead strange behavour.","code":""},{"path":"https://casperhart.github.io/detourr/reference/detourr-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for detourr — detourr-shiny","text":"","code":"shinyRenderTour(expr, env = NULL)  displayScatter2dOutput(output_id, width = \"100%\", height = \"400px\")  displayScatter3dOutput(output_id, width = \"100%\", height = \"400px\")"},{"path":"https://casperhart.github.io/detourr/reference/detourr-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for detourr — detourr-shiny","text":"expr expression generates detourr widget, .e. call animate_tourr env environment evaluate expr. output_id output variable read width Must valid CSS unit (like \"100%\", \"400px\", \"auto\") number, coerced string \"px\" appended. height Must valid CSS unit (like \"100%\", \"400px\", \"auto\") number, coerced string \"px\" appended.","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":null,"dir":"Reference","previous_headings":"","what":"2D and 3D Scatterplot display for tours — display_scatter","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"Display method high performance 2D 3D scatterplot. Performance achieved use Three.js / WebGL, 2D 3D variant selected automatically based tour generator provided.","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"","code":"display_scatter(   mapping = NULL,   ...,   palette = viridisLite::viridis,   center = TRUE,   axes = TRUE,   edges = NULL,   paused = TRUE )"},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"mapping mapping created via tour_aes(). Currently supports colour labels. ... used support aestetic parameters plot, including size: point size, defaults 1 alpha: point opacity, defaults 1 background_colour: defaults \"white\" palette Colour palette use colour aesthetic. Can : character vector R colours. match number levels colour aesthetic, number bins use continuous colours. function takes number colours use input returns character vector colour names / hex values output. center TRUE, center projected data (0, 0, 0). axes Can one : TRUE draw axes use column names axis labels FALSE draw axes labels NULL draw axes labels unnamed vector labels length cols named vector form c(\"h\" = \"head\"), head renamed h edges two column numeric matrix giving indices ends lines. paused whether widget initialised 'paused' state","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"display method produces interactive scatterplot animation supports 2D 3D tours. Linked selection filtering also supported using crosstalk. set interactive controls availabe : timeline play / pause button indicators position basis used. basis indicators can hovered mouse show index basis, clicked jump basis. timeline also allows clicking dragging scrubber move individual frame animation. Orbit controls. 2D variant, allows projection rotated clicking dragging left right. 3D variant, full orbit controls available clicking dragging. orbit pan controls, scroll wheel can used zoom. Pan controls, work similarly orbit controls move camera laterally / vertically rather rotating Resetting orbit pan controls Selection highlighting. Multiple selection possible using shift key Colouring / brushing highlighted points","code":""},{"path":"https://casperhart.github.io/detourr/reference/display_scatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D and 3D Scatterplot display for tours — display_scatter","text":"","code":"animate_tour(tourr::flea, tourr::grand_tour(3), display_scatter()) #> Error in validate_pch(pch): could not find function \"validate_pch\""},{"path":"https://casperhart.github.io/detourr/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. tourr dependence_tour, frozen_guided_tour, frozen_tour, grand_tour, guided_section_tour, guided_tour, little_tour, local_tour, planned_tour","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Aesthetic mapping for tours — tour_aes","title":"Aesthetic mapping for tours — tour_aes","text":"Aesthetic mapping tours describing variables data mapped visual properties tour animation.","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aesthetic mapping for tours — tour_aes","text":"","code":"tour_aes(...)"},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aesthetic mapping for tours — tour_aes","text":"... list name-value pairs form 'aesthetic = variable'. Variables evaluated using tidyselect syntax.","code":""},{"path":"https://casperhart.github.io/detourr/reference/tour_aes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aesthetic mapping for tours — tour_aes","text":"","code":"animate_tour(   tourr::flea,   tourr::grand_tour(3),   display_scatter(tour_aes(colour = species)) ) #> Error in validate_pch(pch): could not find function \"validate_pch\""}]
